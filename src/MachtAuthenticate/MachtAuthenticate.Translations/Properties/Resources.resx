<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MenuFile" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="MenuNew" xml:space="preserve">
    <value>New...</value>
  </data>
  <data name="MenuOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="MenuOpenFile" xml:space="preserve">
    <value>Open File...</value>
  </data>
  <data name="MenuOpenUrl" xml:space="preserve">
    <value>Open URL...</value>
  </data>
  <data name="MenuOpenRecent" xml:space="preserve">
    <value>Open Recent</value>
  </data>
  <data name="MenuClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="MenuSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="MenuSaveAs" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="MenuSaveToFile" xml:space="preserve">
    <value>Save to File...</value>
  </data>
  <data name="MenuSaveToUrl" xml:space="preserve">
    <value>Save to URL...</value>
  </data>
  <data name="MenuSaveCopyToFile" xml:space="preserve">
    <value>Save Copy to File...</value>
  </data>
  <data name="MenuDatabaseSettings" xml:space="preserve">
    <value>Database Settings...</value>
  </data>
  <data name="MenuChangeMasterKey" xml:space="preserve">
    <value>Change Master Key...</value>
  </data>
  <data name="MenuPrint" xml:space="preserve">
    <value>Print...</value>
  </data>
  <data name="MenuImport" xml:space="preserve">
    <value>Import...</value>
  </data>
  <data name="MenuExport" xml:space="preserve">
    <value>Export...</value>
  </data>
  <data name="MenuSynchronize" xml:space="preserve">
    <value>Synchronize</value>
  </data>
  <data name="MenuSynchronizeWithFile" xml:space="preserve">
    <value>Synchronize with File...</value>
  </data>
  <data name="MenuSynchronizeWithUrl" xml:space="preserve">
    <value>Synchronize with URL...</value>
  </data>
  <data name="MenuSynchronizeRecentFiles" xml:space="preserve">
    <value>Recent Files</value>
  </data>
  <data name="MenuLockWorkspace" xml:space="preserve">
    <value>Lock Workspace</value>
  </data>
  <data name="MenuExit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="MenuEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="MenuShowEntries" xml:space="preserve">
    <value>Show Entries</value>
  </data>
  <data name="MenuShowAllEntries" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="MenuShowExpiredEntries" xml:space="preserve">
    <value>Expired</value>
  </data>
  <data name="MenuShowEntriesExpiringIn1Day" xml:space="preserve">
    <value>Expiring in 1 Day</value>
  </data>
  <data name="MenuShowEntriesExpiringIn2Days" xml:space="preserve">
    <value>Expiring in 2 Days</value>
  </data>
  <data name="MenuShowEntriesExpiringIn3Days" xml:space="preserve">
    <value>Expiring in 3 Days</value>
  </data>
  <data name="MenuShowEntriesExpiringIn1Week" xml:space="preserve">
    <value>Expiring in 1 Week</value>
  </data>
  <data name="MenuShowEntriesExpiringIn2Weeks" xml:space="preserve">
    <value>Expiring in 2 Weeks</value>
  </data>
  <data name="MenuShowEntriesExpiringIn4Weeks" xml:space="preserve">
    <value>Expiring in 4 Weeks</value>
  </data>
  <data name="MenuShowEntriesExpiringIn8Weeks" xml:space="preserve">
    <value>Expiring in 8 Weeks</value>
  </data>
  <data name="MenuShowEntriesExpiringInFuture" xml:space="preserve">
    <value>Expiring in the Future</value>
  </data>
  <data name="MenuSelectedEntryGroup" xml:space="preserve">
    <value>Selected Entry's Group</value>
  </data>
  <data name="MenuShowEntriesByTag" xml:space="preserve">
    <value>Show Entries By Tag</value>
  </data>
  <data name="MenuFind" xml:space="preserve">
    <value>Find...</value>
  </data>
  <data name="MenuView" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="MenuChangeLanguage" xml:space="preserve">
    <value>Change Language...</value>
  </data>
  <data name="MenuShowToolbar" xml:space="preserve">
    <value>Show Toolbar</value>
  </data>
  <data name="MenuEntryView" xml:space="preserve">
    <value>Show Entry View</value>
  </data>
  <data name="MenuWindowLayout" xml:space="preserve">
    <value>Window Layout</value>
  </data>
  <data name="MenuWindowLayoutStacked" xml:space="preserve">
    <value>Stacked</value>
  </data>
  <data name="MenuWindowLayoutSideBySide" xml:space="preserve">
    <value>Side by Side</value>
  </data>
  <data name="MenuAlwaysOnTop" xml:space="preserve">
    <value>Always On Top</value>
  </data>
  <data name="MenuConfigureColumns" xml:space="preserve">
    <value>Configure Columns...</value>
  </data>
  <data name="MenuSortBy" xml:space="preserve">
    <value>Sort By...</value>
  </data>
  <data name="MenuTanViewOptions" xml:space="preserve">
    <value>TAN View Options</value>
  </data>
  <data name="MenuTanViewOptionsSimpleListViewTanOnlyGroups" xml:space="preserve">
    <value>Use Simple List View for TAN-Only Groups</value>
  </data>
  <data name="MenuTanViewOptionsShowTanIndicesInEntryTitles" xml:space="preserve">
    <value>Show TAN Indices in Entry Titles</value>
  </data>
  <data name="MenuGroupingInEntryList" xml:space="preserve">
    <value>Grouping in Entry List</value>
  </data>
  <data name="MenuShowSubgroupEntries" xml:space="preserve">
    <value>Show Entries of Subgroups</value>
  </data>
  <data name="MenuTools" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="MenuGeneratePassword" xml:space="preserve">
    <value>Generate Password...</value>
  </data>
  <data name="MenuGeneratePasswordList" xml:space="preserve">
    <value>Generate Password List...</value>
  </data>
  <data name="MenuTanWizard" xml:space="preserve">
    <value>TAN Wizard...</value>
  </data>
  <data name="MenuDatabaseTools" xml:space="preserve">
    <value>Database Tools</value>
  </data>
  <data name="MenuDatabaseMaintenance" xml:space="preserve">
    <value>Database Maintenance...</value>
  </data>
  <data name="MenuDeleteDuplicatedEntries" xml:space="preserve">
    <value>Delete Duplicated Entries</value>
  </data>
  <data name="MenuDeleteEmptyGroups" xml:space="preserve">
    <value>Delete Empty Groups</value>
  </data>
  <data name="MenuDeleteUnusedCustomIcons" xml:space="preserve">
    <value>Delete Unused Custom Icons</value>
  </data>
  <data name="MenuXmlReplace" xml:space="preserve">
    <value>XML Replace...</value>
  </data>
  <data name="MenuTriggers" xml:space="preserve">
    <value>Triggers...</value>
  </data>
  <data name="MenuPlugins" xml:space="preserve">
    <value>Plugins...</value>
  </data>
  <data name="MenuOptions" xml:space="preserve">
    <value>Options...</value>
  </data>
  <data name="MenuHelp" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="MenuHelpContents" xml:space="preserve">
    <value>Help Contents</value>
  </data>
  <data name="MenuHelpSource" xml:space="preserve">
    <value>Help Source...</value>
  </data>
  <data name="MenuAppWebsite" xml:space="preserve">
    <value>Macht Authenticate Website...</value>
  </data>
  <data name="MenuDonate" xml:space="preserve">
    <value>Donate...</value>
  </data>
  <data name="MenuCheckUpdates" xml:space="preserve">
    <value>Check for Updates</value>
  </data>
  <data name="MenuAboutApp" xml:space="preserve">
    <value>About Macht Authenticate...</value>
  </data>
</root>